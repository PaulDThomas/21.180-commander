use asupcouk_asup;
Drop procedure if exists sr_move_queue_0;
/*!50003 SET character_set_client  = latin1 */ ;
/*!50003 SET character_set_results = latin1 */ ;
/*!50003 SET collation_connection  = latin1_swedish_ci */ ;

-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
-- --------------------------------------------------------------------------------
DELIMITER $$

CREATE
PROCEDURE  asupcouk_asup . sr_move_queue_0  (sr_gameno INT)
BEGIN
sproc:BEGIN

-- Process income orders as generated by SR_MOVE_QUEUE_INCM
-- Should be called by the SR_MOVE_QUEUE macro
-- $Id: sr_move_queue_0.sql 242 2014-07-13 13:48:48Z paul $
DECLARE proc_name TEXT DEFAULT "SR_MOVE_QUEUE_0";
DECLARE sr_turnno INT DEFAULT 0;
DECLARE sr_phaseno INT DEFAULT 0;
DECLARE sr_userno INT DEFAULT 0;
DECLARE sr_terrno INT DEFAULT 0;
DECLARE i INT DEFAULT 0;

-- Check game is valid
IF (sr_gameno not in (Select gameno From sp_game Where phaseno=0)) THEN
    Insert Into sp_old_orders (gameno, ordername, order_code)
    Values (sr_gameno, proc_name, Concat("<FAIL><Reason>Invalid game or phase</Reason><Game>",sr_gameno,"</Game></FAIL>"));
    LEAVE sproc;
END IF;
Select turnno, phaseno Into sr_turnno, sr_phaseno From sp_game Where gameno=sr_gameno;

-- Check resource orders
IF @sr_debug != 'N' THEN
    Select userno, extractValue(order_code,'//Minerals'), extractValue(order_code,'//Oil'), extractValue(order_code,'//Grain')
    From sp_orders
    Where gameno=sr_gameno
     and ordername='SR_ORDERXML';
END IF;

-- Add on resources
UPDATE sp_resource r
Join sp_orders o On r.gameno=o.gameno and r.userno=o.userno and o.ordername="SR_ORDERXML"
Set r.minerals = r.minerals + extractValue(order_code,'//Minerals')
 ,r.Oil = r.oil + extractValue(order_code,'//Oil')
 ,r.grain = r.grain + extractValue(order_code,'//Grain')
Where r.gameno=sr_gameno
;

-- Check army orders
IF @sr_debug != 'N' THEN
    Select userno, extractValue(order_code,'//Major')
    From sp_orders
    Where gameno=sr_gameno
     and ordername='SR_ORDERXML';
END IF;


-- Add Tanks
Update sp_board b
Join sp_orders o On b.gameno=o.gameno and b.userno=o.userno and o.ordername="SR_ORDERXML"
Set b.major = b.major+1
Where b.gameno=sr_gameno
 and b.terrno = extractValue(o.order_code,'//Major')
;

-- Add other forces
Set i=1;
WHILE i < 10 DO
    Update sp_board b
    Join sp_orders o On b.gameno=o.gameno and b.userno=o.userno and o.ordername="SR_ORDERXML"
    Set b.minor = b.minor+1
    Where b.gameno=sr_gameno
     and b.terrno = extractValue(o.order_code,Concat('//Minor',i))
    ;
    Set i=i+1;
END WHILE;

-- /* */
END sproc;
END
$$

Delimiter ;
/*
-- Set up new board
Delete From sp_old_orders;
Delete From sp_messages;
Delete From sp_message_queue;
Delete From sp_newq;
Delete from sp_newq_params;

Delete From `sp_orders` Where gameno!=48;
Delete From `sp_old_orders` Where gameno!=48;
Delete From `sp_messages` Where gameno!=48;
Delete From `sp_resource` Where gameno!=48;
Delete From `sp_board` Where gameno!=48;
Delete From `sp_lstars` Where gameno!=48;
Delete From `sp_cards` Where gameno!=48;
Delete From `sp_market` Where gameno!=48;
Delete From `sp_game` Where gameno!=48;

-- Create small game
Insert into sp_newq_params (players, advance_uts,phase2_type) values (4,1,'Buy Position');
Insert into sp_newq (players, advance_uts, userno) values (4,1,3227),(4,1,3238),(4,1,3394),(4,1,3335);
call sr_new_game('N');

-- Process orders
Set @sr_debug = 'N';
Update sp_game set deadline_uts = unix_timestamp()-30 Where gameno=49;
call sr_move_queue(49,'N');

select * from sp_orders where gameno=49;

select powername, minerals, oil, grain, mia from sp_resource where gameno=49;
select * from sv_map where (major > 0 or minor > 1) and gameno=49;
*/